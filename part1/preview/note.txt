assert(Boolean, message)
true 不会反会任何提示
false 会反悔message提示
第一个参数不是逻辑语句会调用Boolean()进行转化，知道返回值是true， 就不会存在任何提示

assert.ok(Boolean, message)

assert.equal(actual, expected, [message])
assert.notEqual(actual, expected, [message])
判断两个值是不是相等使用的是 == 

assert.deepEqual(actual, expected, [message])
对比之间使用 == 只要属性一一对应，并且值相等就认为两个对象相同, 子级也会被对比
要想对比属性 === 可以使用assert.deepStrictEqual()
不对比对象的原型、连接符，或者不可枚举的属性


assert.doesNotThrow(block, [error], [message])
block 函数  执行的函数
error 函数执行过程中，预计抛出的错误类型，如果抛出的错误类型和与error类型相同，则抛出AssertionError, 如果错误类型不相同，或者error参数为undefined,则抛出错误

assert.fail(message)  
fail 通常同于抛出一个错误，不管参数是什么
错误类型: AssertionError

assert.fail(actual, expected, [message], [operator], stackStartFunction)
actual 实际值
expected 期望值
message 错误提示信息
operator 默认为!= 操作符
stackStartFunction  fn 默认为assert.fail。 用于拦截异常栈信息
抛出assertionError






